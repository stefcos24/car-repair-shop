# Generated by Django 4.2.1 on 2023-06-08 10:49
import datetime
import uuid

from django.contrib.auth.hashers import make_password
from django.db import migrations
from django.contrib.auth.models import User, Group
from decouple import config

from domain.models import Person


def create_users(
        first_name: str,
        last_name: str,
        email: str,
        phone_number: str,
        username: str,
        password: str,
        is_superuser: bool,
        group
):
    if not User.objects.filter(username=username).exists():
        person = Person(
                id=uuid.uuid4(),
                first_name=first_name,
                last_name=last_name,
                email=email,
                phone_number=phone_number,
                active=True,
                created=datetime.datetime.now(),
                modified=datetime.datetime.now()
            )
        superuser = User.objects.create(
            username=f"{person.first_name}{person.last_name}",
            password=password,
            email=person.email,
            is_superuser=is_superuser,
            is_staff=is_superuser,
            is_active=True
        )
        # add superuser to admin group
        superuser.groups.add(group)
        person.user = superuser
        person.save()

def create_super_user(apps, schema_editor):

    # creating two group for permissions
    admin_group, _ = Group.objects.get_or_create(name='admin')
    staff_group, _ = Group.objects.get_or_create(name='staff')

    create_users(
        first_name="App",
        last_name="Admin",
        email="appadmin@admin.com",
        phone_number="066111222",
        username="AppAdmin",
        password=make_password(config('SUPERUSER_PASSWORD')),
        is_superuser=True,
        group=admin_group
    )
    create_users(
        first_name="Test",
        last_name="User",
        email="test_user@staff.com",
        phone_number="066111222",
        username="TestUser",
        password=make_password(config('TESTUSER_PASSWORD')),
        is_superuser=False,
        group=staff_group
    )


class Migration(migrations.Migration):

    dependencies = [
        ('domain', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_super_user),
    ]
