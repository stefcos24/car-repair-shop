# Generated by Django 4.2.1 on 2023-06-08 10:49
import datetime
import uuid

from django.contrib.auth.hashers import make_password
from django.db import migrations
from django.contrib.auth.models import User, Group
from decouple import config

from domain.models import Person


def create_super_user(apps, schema_editor):

    # creating two group for permissions
    admin_group, _ = Group.objects.get_or_create(name='admin')
    staff_group, _ = Group.objects.get_or_create(name='staff')

    # check if user not exists and create superuser with admin permissions
    if not User.objects.filter(username='AppAdmin').exists():
        person = Person(
                id=uuid.uuid4(),
                first_name="App",
                last_name="Admin",
                email="appadmin@admin.com",
                phone_number="066111222",
                active=True,
                created=datetime.datetime.now(),
                modified=datetime.datetime.now()
            )
        superuser = User.objects.create(
            username=f"{person.first_name}{person.last_name}",
            password=make_password(config('SUPERUSER_PASSWORD')),
            email=person.email,
            is_superuser=True,
            is_staff=True,
            is_active=True
        )
        # add superuser to admin group
        superuser.groups.add(admin_group)
        person.user = superuser
        person.save()


class Migration(migrations.Migration):

    dependencies = [
        ('domain', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_super_user),
    ]
